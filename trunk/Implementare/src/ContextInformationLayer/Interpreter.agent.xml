<agent xmlns="http://jadex.sourceforge.net/jadex"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex 
	                    http://jadex.sourceforge.net/jadex-0.96.xsd"
	name="Interpreter"
	package="ContextInformationLayer">

	<imports>
		<import>java.util.logging.*</import>
		<import>jadex.adapter.fipa.*</import>
		<import>jadex.util.*</import>
		<import>java.util.*</import>
		<import>jadex.runtime.*</import>
		<import>jadex.runtime.impl.*</import>
		<import>jadex.planlib.*</import>
		<import>ontology.lowerOntology.*</import>
	</imports>
	
	<capabilities>
		<!-- Include the protocols cap. -->
		<capability name="procap" file="jadex.planlib.Protocols"/>
		<!-- Include the df cap. -->
		<capability name="dfcap" file="jadex.planlib.DF"/>
	</capabilities>
	<beliefs>
	  <belief name="sensorNames" exported="true" class="Vector">
                    <fact>new Vector()</fact>
      </belief>
      
      <belief name="sensors" exported="true" class="Vector">
                    <fact>new Vector()</fact>
      </belief>
      <belief name="LightSensorAgent" exported="true" class="Vector">
                    <fact>new Vector()</fact>
      </belief>
	
	  <belief name="TemperatureSensorAgent" exported="true" class="Vector">
                    <fact>new Vector()</fact>
      </belief>
	  
	  <belief name="HumiditySensorAgent" exported="true" class="Vector">
                    <fact>new Vector()</fact>
      </belief>
	        
      <belief name="NoiseSensorAgent" exported="true" class="Vector">
                    <fact>new Vector()</fact>
      </belief>
      
      
	</beliefs>
	
	<goals>
		<!-- Include request goal type from dfcap. -->
		<achievegoalref name="rp_initiate">
			<concrete ref="procap.rp_initiate"/>
		</achievegoalref>

		<!-- Include df search goal type from dfcap. -->
		<achievegoalref name="df_search">
			<concrete ref="dfcap.df_search"/>
		</achievegoalref>
	</goals>
	
	<plans>
		<!-- Initial plan for creating and updating the gui. -->
		<plan name="initSensorPlan">
			<body class="InitSensorPlan"/>
		</plan>
		
	</plans>

	<events>
		<messageevent name="requestContextData" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.REQUEST</value>
			</parameter>
			<parameter name="conversation-id" class="String" direction="fixed">
                <value>"contextSharingStart"</value>
            </parameter>
             <!-- <parameter name="language" class="String" direction="fixed">
            	<value>SFipa.NUGGETS_XML</value>
             </parameter>
            <parameter name="ontology" class="String" direction="fixed">
             	<value>ontology.lowerOntology.SmartHouse.ONTOLOGY_NAME</value>
             </parameter>
             -->
		</messageevent>
		
		<messageevent name="context_info" direction="receive" type="fipa">
            <parameter name="performative" class="String" direction="fixed">
                <value>SFipa.INFORM</value>
            </parameter>
            
            <parameter name="conversation-id" class="String" direction="fixed">
                <value>"contextSharingStart"</value>
            </parameter>
           
            <parameter name="language" class="String" direction="fixed">
            	<value>SFipa.NUGGETS_XML</value>
             </parameter>
           <!--  <parameter  name="content-class" class="Class" direction="fixed">
             	<value>Sensor.class</value>
             </parameter>
             
            -->
             <parameter  name="content-class" class="Class" direction="fixed">
             	<value>java.util.Vector.class</value>
             </parameter>
             
            
             <parameter name="ontology" class="String" direction="fixed">
             	<value>ontology.lowerOntology.SmartHouse.ONTOLOGY_NAME</value>
             </parameter>
             
        </messageevent>
		</events>

	<properties>
 		<!-- Only log outputs >= level are printed. -->
       <property name="logging.level">Level.INFO</property>
 		<!-- The default parent handler prints out log messages on the console. -->
       <property name="logging.useParentHandlers">true</property>
    </properties>

	<configurations>
		<configuration name="default">
			
			<plans>
				<initialplan ref="initSensorPlan"/>
				</plans>
		</configuration>
	</configurations>

</agent>

