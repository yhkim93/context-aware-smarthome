/*
 * $class.javaName.java
 *
 * Generated by Protege plugin Beanynizer. 
 * This class implements the functionality of LocationObject.
 * Feel free to change.
 *
 */
package ontology.lowerOntology;


/**
 *  Editable Java class for concept <code>LocationObject</code> of SmartHouseOntology ontology.
 */
public abstract class LocationObject  extends LocationObjectData implements nuggets.INugget
{
  //-------- constructors --------

  /** 
   *  Default Constructor. <br>
   *  Create a new <code>LocationObject</code>.
   */
  public LocationObject() {
    // Empty constructor required for JavaBeans (do not remove).
  }


  /** 
   *  Clone Constructor. <br>
   *  Create a new <code>LocationObject</code>.<br>
   *  Copy all attributes from <code>proto</code> to this instance.
   *
   *  @param proto The prototype instance.
   */
  public LocationObject(LocationObject proto) {
    setLocation(proto.getLocation());
  }

  //-------- custom code --------
  
  
  //-------- Object methods -----
  
  /**
   *  Get a string representation of this <code>LocationObject</code>.
   *  @return The string representation.
   */
  public String toString() {
    return "LocationObject("
         + "location="+getLocation()
         + ")";
  }
  
  /** 
   *  Get a clone of this <code>LocationObject</code>.
   *  @return a shalow copy of this instance.
   */
  /**public Object clone() {
    return new LocationObject(this);
  }*/
  
  /** 
   *  Test the equality of this <code>LocationObject</code> 
   *  and an object <code>obj</code>.
   *
   *  @param obj the object this test will be performed with
   *  @return false if <code>obj</code> is not of <code>LocationObject</code> class,
   *          true if all attributes are equal.   
   */
  public boolean equals(Object obj) {
    if (obj instanceof LocationObject) {
      LocationObject cmp=(LocationObject)obj;
      if (getLocation()!=cmp.getLocation() &&
           (getLocation()==null || !getLocation().equals(cmp.getLocation()))
          ) return false;
      return true;
    }
    return false;
  }
}

